// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PasswordManagerAPI.Context;

#nullable disable

namespace PasswordManagerAPI.Migrations
{
    [DbContext(typeof(PasswordManagerDbContext))]
    [Migration("20250515171319_Implement Provider")]
    partial class ImplementProvider
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PasswordManagerAPI.Entitys.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LookupTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LookupItems");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2471),
                            IsActive = true,
                            LookupTypeID = 1,
                            Name = "Jordanian"
                        },
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2473),
                            IsActive = true,
                            LookupTypeID = 2,
                            Name = "Client"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2474),
                            IsActive = true,
                            LookupTypeID = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 100,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2475),
                            IsActive = true,
                            LookupTypeID = 3,
                            Name = "Phone"
                        },
                        new
                        {
                            Id = 101,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2476),
                            IsActive = true,
                            LookupTypeID = 3,
                            Name = "Name"
                        },
                        new
                        {
                            Id = 102,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2477),
                            IsActive = true,
                            LookupTypeID = 3,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 103,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2478),
                            IsActive = true,
                            LookupTypeID = 3,
                            Name = "UserName"
                        },
                        new
                        {
                            Id = 104,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2479),
                            IsActive = true,
                            LookupTypeID = 3,
                            Name = "National ID"
                        },
                        new
                        {
                            Id = 200,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2479),
                            IsActive = true,
                            LookupTypeID = 4,
                            Name = "Trainer"
                        },
                        new
                        {
                            Id = 201,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2480),
                            IsActive = true,
                            LookupTypeID = 4,
                            Name = "Manger"
                        },
                        new
                        {
                            Id = 300,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2481),
                            IsActive = true,
                            LookupTypeID = 5,
                            Name = "Personal"
                        },
                        new
                        {
                            Id = 301,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2482),
                            IsActive = true,
                            LookupTypeID = 5,
                            Name = "Banking"
                        },
                        new
                        {
                            Id = 302,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2515),
                            IsActive = true,
                            LookupTypeID = 5,
                            Name = "Social Media"
                        },
                        new
                        {
                            Id = 303,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2516),
                            IsActive = true,
                            LookupTypeID = 5,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("PasswordManagerAPI.Entitys.LookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LookupTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2333),
                            IsActive = true,
                            Name = "Nationality"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2347),
                            IsActive = true,
                            Name = "Role"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2348),
                            IsActive = true,
                            Name = "UserNameType"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2349),
                            IsActive = true,
                            Name = "Specialization"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2349),
                            IsActive = true,
                            Name = "Category"
                        });
                });

            modelBuilder.Entity("PasswordManagerAPI.Entitys.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("PasswordManagerAPI.Entitys.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("PasswordManagerAPI.Entitys.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerfied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OTPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OTPExipry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreationDate = new DateTime(2025, 5, 15, 20, 13, 19, 598, DateTimeKind.Local).AddTicks(2545),
                            Email = "ecef5da14d3354e2a9b2b270109f1e33c3d8fc6e19eab5cd35bab4816804314d07f0cffe5140a77d66cb8f7375201941",
                            IsActive = true,
                            IsLoggedIn = false,
                            IsVerfied = true,
                            Password = "2f462fe1506e0550eaba3dab121eadfd47f0d12128c0af326fdc0ad23673fcc730d4c6c1dc0710765dbadd18cba262b4",
                            RoleId = 2,
                            Username = "e276366b3cb0f0385b1bc245978527bc4833779904ea0b159ea08a22b2d125e3c2b72514001d58878610b63e985f7650"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
